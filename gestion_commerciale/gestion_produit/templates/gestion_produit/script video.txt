<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier Produit</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            background-color: #f0f2f5;
            padding: 0 20px;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
        }

        #imagePreview img {
            max-width: 100%;
            height: auto;
            margin-top: 20px;
        }

        #scannerVideo {
            width: 100%;
            height: 300px;
            background-color: #000;
        }

        .form-container {
            max-width: 600px;
            width: 100%;
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            margin: 50px auto;
        }

        .form-header h1 {
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.min.js"></script>
    <div class="form-container">
        <div class="form-header text-center">
            <h1>Modifier le Produit</h1>
        </div>

        {% if messages %}
            <div>
                {% for message in messages %}
                    <div class="alert alert-{{ message.tags }}" role="alert">
                        {{ message }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}

        <form method="post" novalidate enctype="multipart/form-data">
            {% csrf_token %}

            <div class="row g-3 mb-3">
                <div class="col-md-6">
                    <label for="designation" class="form-label">Désignation</label>
                    <input type="text" class="form-control" id="designation" name="designation" value="{{ form.designation.value }}" required>
                </div>
                <div class="col-md-6">
                    <label for="description" class="form-label">Description</label>
                    <input type="text" class="form-control" id="description" name="description" value="{{ form.description.value }}" required>
                </div>
            </div>

            <div class="row g-3 mb-3">
                <div class="col-md-6">
                    <label for="prix_achat" class="form-label">Prix Achat</label>
                    <input type="text" class="form-control" id="prix_achat" name="prix_achat" value="{{ form.prix_achat.value }}" required>
                </div>
                <div class="col-md-6">
                    <label for="prix_vente" class="form-label">Prix Vente</label>
                    <input type="text" class="form-control" id="prix_vente" name="prix_vente" value="{{ form.prix_vente.value }}" required>
                </div>
            </div>

            <div class="mb-3">
                <label for="stock" class="form-label">Quantité en Stock</label>
                <input type="number" class="form-control" id="stock" name="stock" value="{{ form.stock.value }}" required>
            </div>

            <div class="mb-3">
                <label for="id_barcode" class="form-label">Code-barres</label>
                <input type="text" class="form-control" id="id_barcode" name="barcode" value="{{ form.barcode.value }}" required>
            </div>

            <div class="mb-3">
                <label for="id_barcode2" class="form-label">Code-barres 2</label>
                <input type="text" class="form-control" id="id_barcode2" name="barcode2" readonly>
            </div>

            <div class="mb-3">
                <button type="button" class="btn btn-info" id="scanBarcodeBtn">Scanner le code-barres</button>
            </div>

            <div id="scanner" class="mt-4" style="width: 100%; height: 300px; border: 1px solid #ccc;">
                <video id="scannerVideo"></video>
            </div>

            <div class="form-group mb-3">
                <label for="barcodeImage">Télécharger une image contenant un code-barres :</label>
                <input type="file" id="barcodeImage" name="barcodeImage" accept="image/*" class="form-control">
            </div>
            <button type="button" class="btn btn-primary" id="uploadBarcodeBtn">Analyser l'image</button>

            <div id="imagePreview" class="mt-3"></div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary">Enregistrer</button>
                <button type="reset" class="btn btn-secondary">Annuler</button>
            </div>
        </form>
    </div>


    <script>
    /*    // Traitement de l'image téléchargée pour l'analyse du code-barres
        document.getElementById('uploadBarcodeBtn').addEventListener('click', function() {
            const fileInput = document.getElementById('barcodeImage');
            const file = fileInput.files[0];
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('imagePreview').innerHTML = `<img src="${e.target.result}" alt="Image Code-barres">`;

                    Quagga.decodeSingle({
                        src: e.target.result,
                        numOfWorkers: 0,
                        inputStream: { size: 800 },
                        decoder: { readers: ['code_128_reader', 'ean_reader', 'ean_13_reader', 'upc_reader'] }
                    }, function(result) {
                        if (result && result.codeResult) {
                            const barcode = result.codeResult.code;
                            document.getElementById('id_barcode').value = barcode;
                            document.getElementById('id_barcode2').value = barcode;
                        } else {
                            alert("Aucun code-barres détecté.");
                        }
                    });
                };
                reader.readAsDataURL(file);
            } else {
                alert("Veuillez sélectionner une image.");
            }
        }); */

        // Scanner de code-barres en temps réel
        document.getElementById('scanBarcodeBtn').addEventListener('click', function() {
            const videoElement = document.getElementById('scannerVideo');


            // Vérifiez si la caméra fonctionne avant d'utiliser Quagga
            navigator.mediaDevices.getUserMedia({ video: true })
                .then(function(stream) {
                    const video = document.getElementById('scannerVideo');
                    video.srcObject = stream;
                    video.play();
                    console.log("La caméra fonctionne correctement.");
                })
                .catch(function(err) {
                    console.error("Erreur d'accès à la caméra :", err);
                    alert("Impossible d'accéder à la caméra. Vérifiez les autorisations.");
                });

// Une fois confirmé que la caméra fonctionne, initialisez Quagga
console.log("Quagga init params:", {
    inputStream: {
        name: "Live",
        type: "LiveStream",
        target: videoElement,
        constraints: {
            width: { min: 640 },
            height: { min: 480 },
            facingMode: "environment"
        }
    },
    decoder: {
        readers: ["code_128_reader"]
    }
});

            Quagga.init({
                inputStream: {
                    name: "Live",
                    type: "LiveStream",
                    target: videoElement, // Cible pour afficher la vidéo
                    constraints: {
                        width: { min: 640 },
                        height: { min: 480 },
                        facingMode: "environment" // Utilise la caméra arrière si disponible
                    }
                },
                decoder: {
                    readers: ["code_128_reader", "ean_reader", "ean_13_reader", "upc_reader", "ean_8_reader", "code_39_reader"] // Ajoutez plus de lecteurs
                }
            }, function(err) {
                if (err) {
                    console.error("Erreur lors de l'initialisation de Quagga :", err);
                    alert("Impossible d'initialiser la caméra. Assurez-vous d'avoir donné les autorisations nécessaires.");
                    return;
                }

                console.log("Quagga est prêt. La caméra est en cours d'activation.");
                Quagga.start(); // Démarre le flux vidéo
            });

            // Gestion des événements de détection
            Quagga.onDetected(function(result) {
                if (result && result.codeResult && result.codeResult.code) {
                    console.log("Code-barres détecté :", result.codeResult.code);
                    const barcode = result.codeResult.code;
                    document.getElementById('id_barcode').value = barcode;
                    document.getElementById('id_barcode2').value = barcode;

                    // Arrête Quagga après avoir détecté un code
                    Quagga.stop();
                    alert(`Code-barres détecté : ${barcode}`);
                }
            });
        });

    </script>
</body>
</html>
