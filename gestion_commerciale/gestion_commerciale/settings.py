"""
Django settings for gestion_commerciale project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ht&va+kp(rs15jkv=_k01!2xuzo&%p^92dab#%4p=_5jp=q)fl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',   
    'gestion_clients', 
    'gestion_fournisseur', 
    'gestion_ventes', 
    'gestion_produit', 
    'gestion_user',
    
    
]

# settings.py
AUTH_USER_MODEL = 'gestion_user.CustomUser'




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestion_commerciale.urls'


import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'gestion_clients/templates') ,
                 os.path.join(BASE_DIR, 'gestion_commerciale/templates'), 
                 os.path.join(BASE_DIR, 'gestion_ventes/templates') # Nouveau répertoire des templates pour gestion_commerciale
                ],

        'APP_DIRS': True,  # Cela permet à Django de rechercher automatiquement des templates dans les répertoires "templates" de chaque application
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'gestion_commerciale.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        
    
    'ENGINE': 'django.db.backends.mysql',  # Le backend pour MySQL
    'NAME': 'gestioncomw',  # Nom de la base de données       
    'USER': 'root',  # Nom d'utilisateur pour la connexion
    'PASSWORD': 'pass',  # Mot de passe de l'utilisateur
    'HOST': 'localhost',  # Hôte de la base de données (souvent 'localhost' pour une base locale)
    'PORT': '3306',  # Port pour MySQL (par défaut 3306)

    
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# URL pour accéder aux fichiers statiques
STATIC_URL = 'static/'

# Chemin absolu vers le répertoire des fichiers statiques
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # Dossier "static" à la racine du projet
]

# Chemin où collectstatic place les fichiers en production
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Utilisé uniquement en production

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'


LOGIN_URL = '/login/'
 # Redirige après connexion
LOGIN_REDIRECT_URL = '/'  # Redirige vers la page principale (route définie dans urls.py)

LOGOUT_REDIRECT_URL = '/login/'  # Redirige après déconnexion
